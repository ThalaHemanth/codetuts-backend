{"version":3,"sources":["../../src/resolvers/Query.js"],"names":["Query","getCourses","parent","language","db","results","collection","get","then","snapshot","forEach","push","doc","data","console","log","Error","default"],"mappings":"0pLAAA,IAAMA,QAAQ;AACZC,+FAAY,iBAAOC,MAAP,oBAAiBC,QAAjB,QAAiBA,QAAjB,KAA+BC,EAA/B,SAA+BA,EAA/B;AACJC,qBADI,GACM,EADN;;AAGFD;AACHE,0BADG,CACQH,QADR;AAEHI,mBAFG;AAGHC,oBAHG,CAGE,oBAAY;AAChBC,2BAASC,OAAT,CAAiB,eAAO;AACtBL,4BAAQM,IAAR,cAAkBC,IAAIC,IAAJ,EAAlB;AACD,mBAFD;AAGD,iBAPG,CAHE;AAWRC,sBAAQC,GAAR,CAAYV,OAAZ,EAXQ;;AAaF,oBAAIW,KAAJ,CAAU,OAAV,cAbE;;AAeHX,qBAfG,gFAAZ,gGADY,EAAd,C;;;AAmBkBY,O,GAATjB,K","file":"Query.js","sourcesContent":["const Query = {\n  getCourses: async (parent, { language }, { db }) => {\n    const results = [];\n    try {\n      await db\n        .collection(language)\n        .get()\n        .then(snapshot => {\n          snapshot.forEach(doc => {\n            results.push({ ...doc.data() });\n          });\n        });\n      console.log(results);\n    } catch (error) {\n      throw new Error('Error', error);\n    }\n    return results;\n  },\n};\nexport { Query as default };\n"]}